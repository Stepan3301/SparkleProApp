<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SparklePro - Mobile Date & Time Picker</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            color: #333;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            max-width: 400px;
            width: 100%;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            padding: 30px;
            box-shadow: 
                0 25px 80px rgba(0, 0, 0, 0.15),
                inset 0 1px 0 rgba(255, 255, 255, 0.6);
            position: relative;
            overflow: hidden;
            min-height: 600px;
        }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #2E86AB, #A23B72, #F6AE2D, #2E86AB);
            background-size: 200% 100%;
            animation: rainbow 3s linear infinite;
        }

        .title {
            text-align: center;
            font-size: 24px;
            font-weight: 800;
            background: linear-gradient(135deg, #2E86AB 0%, #A23B72 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 30px;
            position: relative;
        }

        .title::after {
            content: '✨';
            position: absolute;
            top: -5px;
            right: -20px;
            font-size: 20px;
            animation: sparkle 2s infinite;
        }

        /* Step indicator */
        .step-indicator {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 30px;
            gap: 15px;
        }

        .step-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #e9ecef;
            transition: all 0.3s ease;
        }

        .step-dot.active {
            background: linear-gradient(135deg, #2E86AB 0%, #A23B72 100%);
            transform: scale(1.3);
            box-shadow: 0 4px 15px rgba(46, 134, 171, 0.3);
        }

        .step-dot.completed {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

        /* Screen container */
        .screen-container {
            position: relative;
            min-height: 450px;
        }

        .screen {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            opacity: 0;
            transform: translateX(100px);
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            pointer-events: none;
        }

        .screen.active {
            opacity: 1;
            transform: translateX(0);
            pointer-events: all;
        }

        .screen.prev {
            transform: translateX(-100px);
        }

        /* Date Screen */
        .date-screen {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: 20px;
            padding: 25px;
            box-shadow: 
                0 15px 40px rgba(46, 134, 171, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
            border: 2px solid rgba(46, 134, 171, 0.1);
            position: relative;
            overflow: hidden;
        }

        .date-screen::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(46, 134, 171, 0.05) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }

        .section-title {
            font-size: 20px;
            font-weight: 700;
            color: #2E86AB;
            margin-bottom: 20px;
            text-align: center;
            position: relative;
            z-index: 2;
        }

        .date-input-container {
            position: relative;
            margin-bottom: 25px;
            z-index: 2;
        }

        .date-input {
            width: 100%;
            padding: 16px 20px;
            font-size: 16px;
            font-weight: 600;
            border: 3px solid transparent;
            background: linear-gradient(white, white) padding-box,
                        linear-gradient(135deg, #2E86AB, #A23B72) border-box;
            color: #2E86AB;
            text-align: center;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border-radius: 15px;
            position: relative;
            overflow: hidden;
        }

        .date-input::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(46, 134, 171, 0.1), transparent);
            transition: left 0.6s;
        }

        .date-input:hover::before {
            left: 100%;
        }

        .date-input:focus {
            outline: none;
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(46, 134, 171, 0.2);
        }

        .date-input::placeholder {
            color: #6c757d;
            font-weight: 500;
        }

        /* Calendar */
        .calendar-container {
            position: relative;
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 
                inset 0 2px 10px rgba(46, 134, 171, 0.05),
                0 8px 30px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(46, 134, 171, 0.1);
            z-index: 2;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 0 5px;
        }

        .nav-btn {
            width: 40px;
            height: 40px;
            border: none;
            background: linear-gradient(135deg, #2E86AB 0%, #4A90E2 100%);
            color: white;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 12px;
            position: relative;
            overflow: hidden;
        }

        .nav-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #1e5f7a 0%, #357abd 100%);
            transform: scale(0);
            transition: transform 0.3s ease;
            border-radius: inherit;
        }

        .nav-btn:hover::before {
            transform: scale(1);
        }

        .nav-btn span {
            position: relative;
            z-index: 1;
        }

        .nav-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(46, 134, 171, 0.4);
        }

        .month-year {
            font-size: 18px;
            font-weight: 800;
            background: linear-gradient(135deg, #2E86AB 0%, #A23B72 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-align: center;
            padding: 12px 20px;
            background-color: rgba(46, 134, 171, 0.05);
            border-radius: 15px;
            min-width: 180px;
            position: relative;
            overflow: hidden;
        }

        .month-year::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            transition: left 0.6s;
        }

        .month-year:hover::before {
            left: 100%;
        }

        /* Days header */
        .days-header {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 6px;
            margin-bottom: 12px;
        }

        .day-header {
            text-align: center;
            font-size: 11px;
            font-weight: 700;
            color: #6c757d;
            padding: 8px 2px;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Calendar grid */
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 6px;
        }

        .day-cell {
            aspect-ratio: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            border-radius: 12px;
        }

        .day-cell::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: radial-gradient(circle, rgba(46, 134, 171, 0.2) 0%, transparent 70%);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: all 0.4s ease;
        }

        .day-cell:hover::before {
            width: 120%;
            height: 120%;
        }

        .day-cell.other-month {
            color: #adb5bd;
            background: transparent;
        }

        .day-cell.current-month {
            color: #495057;
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border: 2px solid #e9ecef;
        }

        .day-cell.current-month:hover {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            border-color: #2E86AB;
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(46, 134, 171, 0.3);
        }

        /* Today - emerald green */
        .day-cell.today {
            background: linear-gradient(135deg, #10b981 0%, #34d399 100%);
            color: white;
            border: 2px solid #10b981;
            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.4);
            animation: pulse-today 2s infinite;
            position: relative;
        }

        .day-cell.today::after {
            content: '✨';
            position: absolute;
            top: -3px;
            right: -3px;
            font-size: 8px;
            animation: sparkle 1.5s infinite;
        }

        /* Selected - sky blue */
        .day-cell.selected {
            background: linear-gradient(135deg, #0ea5e9 0%, #38bdf8 100%);
            color: white;
            border: 2px solid #0ea5e9;
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(14, 165, 233, 0.5);
            clip-path: polygon(15% 0%, 85% 0%, 100% 15%, 100% 85%, 85% 100%, 15% 100%, 0% 85%, 0% 15%);
        }

        .day-cell.weekend {
            color: #F24236;
        }

        .day-cell.weekend.current-month {
            background: linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%);
            border-color: rgba(242, 66, 54, 0.3);
        }

        /* Past dates */
        .day-cell.past {
            opacity: 0.3;
            cursor: not-allowed;
        }

        /* Time Screen */
        .time-screen {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: 20px;
            padding: 25px;
            box-shadow: 
                0 15px 40px rgba(162, 59, 114, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
            border: 2px solid rgba(162, 59, 114, 0.1);
            position: relative;
            overflow: hidden;
        }

        .time-screen::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(162, 59, 114, 0.05) 0%, transparent 70%);
            animation: rotate-reverse 25s linear infinite;
        }

        .time-input-container {
            position: relative;
            margin-bottom: 25px;
            z-index: 2;
        }

        .time-input {
            width: 100%;
            padding: 16px 20px;
            font-size: 16px;
            font-weight: 600;
            border: 3px solid transparent;
            background: linear-gradient(white, white) padding-box,
                        linear-gradient(135deg, #A23B72, #F6AE2D) border-box;
            color: #A23B72;
            text-align: center;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border-radius: 15px;
            position: relative;
            overflow: hidden;
        }

        .time-input::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(162, 59, 114, 0.1), transparent);
            transition: left 0.6s;
        }

        .time-input:hover::before {
            left: 100%;
        }

        .time-input:focus {
            outline: none;
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(162, 59, 114, 0.2);
        }

        .time-slots {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            max-height: 300px;
            overflow-y: auto;
            padding-right: 5px;
            z-index: 2;
            position: relative;
        }

        .time-slots::-webkit-scrollbar {
            width: 4px;
        }

        .time-slots::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .time-slots::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #A23B72, #F6AE2D);
            border-radius: 10px;
        }

        .time-slot {
            padding: 12px 16px;
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border: 2px solid #e9ecef;
            border-radius: 15px;
            text-align: center;
            font-size: 14px;
            font-weight: 600;
            color: #495057;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

        .time-slot::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(162, 59, 114, 0.1) 0%, rgba(246, 174, 45, 0.1) 100%);
            transform: scale(0);
            transition: transform 0.3s ease;
            border-radius: inherit;
        }

        .time-slot:hover::before {
            transform: scale(1);
        }

        .time-slot:hover {
            border-color: #A23B72;
            transform: translateY(-2px) scale(1.02);
            box-shadow: 0 6px 20px rgba(162, 59, 114, 0.2);
        }

        .time-slot.selected {
            background: linear-gradient(135deg, #A23B72 0%, #F6AE2D 100%);
            color: white;
            border-color: #A23B72;
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(162, 59, 114, 0.4);
            clip-path: polygon(10% 0%, 90% 0%, 100% 10%, 100% 90%, 90% 100%, 10% 100%, 0% 90%, 0% 10%);
        }

        .time-slot.unavailable {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            color: #adb5bd;
            cursor: not-allowed;
            opacity: 0.6;
        }

        .time-slot.unavailable:hover {
            transform: none;
            box-shadow: none;
            border-color: #e9ecef;
        }

        /* Navigation buttons */
        .nav-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 30px;
            gap: 15px;
        }

        .nav-button {
            padding: 14px 28px;
            border: none;
            font-family: inherit;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border-radius: 20px;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .nav-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.6s;
        }

        .nav-button:hover::before {
            left: 100%;
        }

        .btn-back {
            background: linear-gradient(135deg, #6C757D 0%, #ADB5BD 100%);
            color: white;
        }

        .btn-back:hover {
            background: linear-gradient(135deg, #545b62 0%, #95a0a8 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(108, 117, 125, 0.3);
        }

        .btn-next {
            background: linear-gradient(135deg, #2E86AB 0%, #A23B72 100%);
            color: white;
        }

        .btn-next:hover {
            background: linear-gradient(135deg, #1e5f7a 0%, #8b2f5e 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(46, 134, 171, 0.4);
        }

        .btn-finish {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .btn-finish:hover {
            background: linear-gradient(135deg, #1e7e34 0%, #17a2b8 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
        }

        .nav-button:disabled {
            background: linear-gradient(135deg, #e9ecef 0%, #dee2e6 100%);
            color: #6c757d;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .nav-button:active {
            transform: translateY(-1px) scale(0.98);
        }

        /* Floating elements */
        .floating-elements {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            overflow: hidden;
        }

        .floating-bubble {
            position: absolute;
            border-radius: 50%;
            opacity: 0.1;
            animation: float-up 8s infinite ease-in-out;
        }

        .floating-bubble:nth-child(1) {
            width: 15px;
            height: 15px;
            background: #2E86AB;
            left: 10%;
            animation-delay: 0s;
        }

        .floating-bubble:nth-child(2) {
            width: 12px;
            height: 12px;
            background: #A23B72;
            left: 30%;
            animation-delay: 2s;
        }

        .floating-bubble:nth-child(3) {
            width: 18px;
            height: 18px;
            background: #F6AE2D;
            left: 60%;
            animation-delay: 4s;
        }

        .floating-bubble:nth-child(4) {
            width: 14px;
            height: 14px;
            background: #10b981;
            left: 80%;
            animation-delay: 6s;
        }

        /* Animations */
        @keyframes rainbow {
            0% { background-position: 0% 50%; }
            100% { background-position: 200% 50%; }
        }

        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes rotate-reverse {
            0% { transform: rotate(360deg); }
            100% { transform: rotate(0deg); }
        }

        @keyframes sparkle {
            0%, 100% { opacity: 0.5; transform: scale(0.8) rotate(0deg); }
            50% { opacity: 1; transform: scale(1.2) rotate(180deg); }
        }

        @keyframes pulse-today {
            0%, 100% { transform: scale(1); box-shadow: 0 6px 20px rgba(16, 185, 129, 0.4); }
            50% { transform: scale(1.05); box-shadow: 0 8px 30px rgba(16, 185, 129, 0.6); }
        }

        @keyframes float-up {
            0% { 
                transform: translateY(100vh) rotate(0deg); 
                opacity: 0; 
            }
            10%, 90% { 
                opacity: 0.1; 
            }
            50% { 
                transform: translateY(-20px) rotate(180deg); 
            }
            100% { 
                transform: translateY(-100vh) rotate(360deg); 
                opacity: 0; 
            }
        }
    </style>
</head>
<body>
    <div class="floating-elements">
        <div class="floating-bubble"></div>
        <div class="floating-bubble"></div>
        <div class="floating-bubble"></div>
        <div class="floating-bubble"></div>
    </div>

    <div class="container">
        <h1 class="title">🧽 Book Your Cleaning</h1>
        
        <!-- Step Indicator -->
        <div class="step-indicator">
            <div class="step-dot active" id="step1"></div>
            <div class="step-dot" id="step2"></div>
        </div>

        <!-- Screen Container -->
        <div class="screen-container">
            <!-- Date Selection Screen -->
            <div class="screen active" id="dateScreen">
                <div class="date-screen">
                    <h2 class="section-title">📅 Select Date</h2>
                    
                    <div class="date-input-container">
                        <input type="text" class="date-input" id="dateInput" placeholder="Choose your cleaning date" readonly>
                    </div>

                    <div class="calendar-container" id="calendar">
                        <div class="calendar-header">
                            <button class="nav-btn" id="prevMonth">
                                <span>‹</span>
                            </button>
                            <div class="month-year" id="monthYear">January 2025</div>
                            <button class="nav-btn" id="nextMonth">
                                <span>›</span>
                            </button>
                        </div>

                        <div class="days-header">
                            <div class="day-header">Mon</div>
                            <div class="day-header">Tue</div>
                            <div class="day-header">Wed</div>
                            <div class="day-header">Thu</div>
                            <div class="day-header">Fri</div>
                            <div class="day-header">Sat</div>
                            <div class="day-header">Sun</div>
                        </div>

                        <div class="calendar-grid" id="calendarGrid">
                            <!-- Days will be generated by JavaScript -->
                        </div>
                    </div>
                </div>

                <div class="nav-buttons">
                    <div></div> <!-- Empty space for alignment -->
                    <button class="nav-button btn-next" id="nextBtn" disabled>
                        Next
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Time Selection Screen -->
            <div class="screen" id="timeScreen">
                <div class="time-screen">
                    <h2 class="section-title">🕐 Select Time</h2>
                    
                    <div class="time-input-container">
                        <input type="text" class="time-input" id="timeInput" placeholder="Choose your preferred time" readonly>
                    </div>

                    <div class="time-slots" id="timeSlots">
                        <!-- Time slots will be generated by JavaScript -->
                    </div>
                </div>

                <div class="nav-buttons">
                    <button class="nav-button btn-back" id="backBtn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"/>
                        </svg>
                        Back
                    </button>
                    <button class="nav-button btn-finish" id="finishBtn" disabled>
                        Finish
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        class MobileDateTimePicker {
            constructor() {
                this.currentDate = new Date();
                this.selectedDate = null;
                this.selectedTime = null;
                this.today = new Date();
                this.currentScreen = 'date';
                
                this.monthNames = [
                    'January', 'February', 'March', 'April', 'May', 'June',
                    'July', 'August', 'September', 'October', 'November', 'December'
                ];
                
                this.timeSlots = [
                    '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM',
                    '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM',
                    '4:00 PM', '5:00 PM', '6:00 PM', '7:00 PM'
                ];
                
                this.unavailableTimes = ['12:00 PM', '1:00 PM']; // Lunch break
                
                this.init();
            }

            init() {
                this.bindEvents();
                this.renderCalendar();
                this.renderTimeSlots();
            }

            bindEvents() {
                // Calendar navigation
                document.getElementById('prevMonth').addEventListener('click', () => this.previousMonth());
                document.getElementById('nextMonth').addEventListener('click', () => this.nextMonth());
                
                // Screen navigation
                document.getElementById('nextBtn').addEventListener('click', () => this.goToTimeScreen());
                document.getElementById('backBtn').addEventListener('click', () => this.goToDateScreen());
                document.getElementById('finishBtn').addEventListener('click', () => this.finishBooking());
            }

            previousMonth() {
                this.currentDate.setMonth(this.currentDate.getMonth() - 1);
                this.renderCalendar();
            }

            nextMonth() {
                this.currentDate.setMonth(this.currentDate.getMonth() + 1);
                this.renderCalendar();
            }

            selectDate(day) {
                if (day > 0) {
                    const selectedDate = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth(), day);
                    
                    // Don't allow past dates
                    if (selectedDate < new Date().setHours(0,0,0,0)) {
                        return;
                    }
                    
                    this.selectedDate = selectedDate;
                    this.updateDateInput();
                    this.renderCalendar();
                    this.updateNextButton();
                }
            }

            selectTime(time) {
                if (!this.unavailableTimes.includes(time)) {
                    this.selectedTime = time;
                    this.updateTimeInput();
                    this.renderTimeSlots();
                    this.updateFinishButton();
                }
            }

            goToTimeScreen() {
                if (!this.selectedDate) return;
                
                this.currentScreen = 'time';
                this.updateScreens();
                this.updateStepIndicator();
            }

            goToDateScreen() {
                this.currentScreen = 'date';
                this.updateScreens();
                this.updateStepIndicator();
            }

            updateScreens() {
                const dateScreen = document.getElementById('dateScreen');
                const timeScreen = document.getElementById('timeScreen');
                
                if (this.currentScreen === 'date') {
                    dateScreen.classList.add('active');
                    dateScreen.classList.remove('prev');
                    timeScreen.classList.remove('active');
                    timeScreen.classList.add('prev');
                } else {
                    timeScreen.classList.add('active');
                    timeScreen.classList.remove('prev');
                    dateScreen.classList.remove('active');
                    dateScreen.classList.add('prev');
                }
            }

            updateStepIndicator() {
                const step1 = document.getElementById('step1');
                const step2 = document.getElementById('step2');
                
                if (this.currentScreen === 'date') {
                    step1.classList.add('active');
                    step1.classList.remove('completed');
                    step2.classList.remove('active');
                } else {
                    step1.classList.add('completed');
                    step1.classList.remove('active');
                    step2.classList.add('active');
                }
            }

            updateDateInput() {
                const input = document.getElementById('dateInput');
                if (this.selectedDate) {
                    const day = String(this.selectedDate.getDate()).padStart(2, '0');
                    const month = String(this.selectedDate.getMonth() + 1).padStart(2, '0');
                    const year = this.selectedDate.getFullYear();
                    input.value = `${day}.${month}.${year}`;
                } else {
                    input.value = '';
                }
            }

            updateTimeInput() {
                const input = document.getElementById('timeInput');
                input.value = this.selectedTime || '';
            }

            updateNextButton() {
                const btn = document.getElementById('nextBtn');
                btn.disabled = !this.selectedDate;
            }

            updateFinishButton() {
                const btn = document.getElementById('finishBtn');
                btn.disabled = !this.selectedTime;
            }

            renderCalendar() {
                this.renderHeader();
                this.renderCalendarGrid();
            }

            renderHeader() {
                const monthYear = document.getElementById('monthYear');
                monthYear.textContent = `${this.monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;
            }

            renderCalendarGrid() {
                const grid = document.getElementById('calendarGrid');
                grid.innerHTML = '';

                const year = this.currentDate.getFullYear();
                const month = this.currentDate.getMonth();
                
                const firstDay = new Date(year, month, 1);
                const lastDay = new Date(year, month + 1, 0);
                const daysInMonth = lastDay.getDate();
                
                let startDay = firstDay.getDay();
                startDay = startDay === 0 ? 6 : startDay - 1;

                const prevMonth = new Date(year, month - 1, 0);
                const daysInPrevMonth = prevMonth.getDate();
                
                // Previous month days
                for (let i = startDay - 1; i >= 0; i--) {
                    const day = daysInPrevMonth - i;
                    const cell = this.createDayCell(day, 'other-month');
                    grid.appendChild(cell);
                }

                // Current month days
                for (let day = 1; day <= daysInMonth; day++) {
                    const cell = this.createDayCell(day, 'current-month');
                    
                    // Check if it's today
                    if (year === this.today.getFullYear() && 
                        month === this.today.getMonth() && 
                        day === this.today.getDate()) {
                        cell.classList.add('today');
                    }
                    
                    // Check if it's selected
                    if (this.selectedDate && 
                        year === this.selectedDate.getFullYear() && 
                        month === this.selectedDate.getMonth() && 
                        day === this.selectedDate.getDate()) {
                        cell.classList.add('selected');
                    }
                    
                    // Check if it's weekend
                    const dayOfWeek = new Date(year, month, day).getDay();
                    if (dayOfWeek === 0 || dayOfWeek === 6) {
                        cell.classList.add('weekend');
                    }
                    
                    // Check if it's past date
                    const cellDate = new Date(year, month, day);
                    if (cellDate < new Date().setHours(0,0,0,0)) {
                        cell.classList.add('past');
                    } else {
                        cell.addEventListener('click', () => this.selectDate(day));
                    }
                    
                    grid.appendChild(cell);
                }

                // Next month days
                const totalCells = grid.children.length;
                const remainingCells = 42 - totalCells;
                
                for (let day = 1; day <= remainingCells; day++) {
                    const cell = this.createDayCell(day, 'other-month');
                    grid.appendChild(cell);
                }
            }

            createDayCell(day, className) {
                const cell = document.createElement('div');
                cell.className = `day-cell ${className}`;
                cell.textContent = day;
                return cell;
            }

            renderTimeSlots() {
                const container = document.getElementById('timeSlots');
                container.innerHTML = '';

                this.timeSlots.forEach(time => {
                    const slot = document.createElement('div');
                    slot.className = 'time-slot';
                    slot.textContent = time;
                    
                    if (this.unavailableTimes.includes(time)) {
                        slot.classList.add('unavailable');
                        slot.title = 'Not available';
                    } else {
                        slot.addEventListener('click', () => this.selectTime(time));
                    }
                    
                    if (this.selectedTime === time) {
                        slot.classList.add('selected');
                    }
                    
                    container.appendChild(slot);
                });
            }

            finishBooking() {
                if (this.selectedDate && this.selectedTime) {
                    const formattedDate = this.formatDate(this.selectedDate);
                    
                    // Add success animation
                    const btn = document.getElementById('finishBtn');
                    btn.style.transform = 'scale(1.1)';
                    btn.style.background = 'linear-gradient(135deg, #28a745 0%, #20c997 100%)';
                    btn.innerHTML = '✅ Booked!';
                    
                    setTimeout(() => {
                        alert(`🎉 Booking confirmed!\n\nDate: ${formattedDate}\nTime: ${this.selectedTime}\n\nWe'll send you a confirmation email shortly!`);
                        
                        // Reset
                        this.selectedDate = null;
                        this.selectedTime = null;
                        this.currentScreen = 'date';
                        this.updateScreens();
                        this.updateStepIndicator();
                        this.updateDateInput();
                        this.updateTimeInput();
                        this.updateNextButton();
                        this.updateFinishButton();
                        this.renderCalendar();
                        this.renderTimeSlots();
                        
                        // Reset button
                        btn.style.transform = '';
                        btn.style.background = '';
                        btn.innerHTML = 'Finish <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"/></svg>';
                    }, 1500);
                }
            }

            formatDate(date) {
                const day = String(date.getDate()).padStart(2, '0');
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const year = date.getFullYear();
                return `${day}.${month}.${year}`;
            }
        }

        // Initialize the picker
        document.addEventListener('DOMContentLoaded', () => {
            new MobileDateTimePicker();
        });

        // Add entrance animation
        window.addEventListener('load', () => {
            const container = document.querySelector('.container');
            container.style.opacity = '0';
            container.style.transform = 'translateY(50px) scale(0.9)';
            
            setTimeout(() => {
                container.style.transition = 'all 0.8s cubic-bezier(0.4, 0, 0.2, 1)';
                container.style.opacity = '1';
                container.style.transform = 'translateY(0) scale(1)';
            }, 100);
        });
    </script>
</body>
</html>